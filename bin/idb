#!/bin/bash
# idb: manage/access info database
# Copyright (c) 2024 Bluenetics GmbH
# SPDX-License-Identifier: Apache-2.0

#===============================================================================
# idb -?;  idb --help   # show usage
#===============================================================================

   if [ "$*" == "-?" ] || [ "$*" == "--help" ] || [ "$*" == "--?" ]; then
      ec -g "usage: manage/access info database (version `idb --version`)"
      echo  '  idb -s <dbase> <key> <tag> <val> # store value in info database'
      echo  '  VAL=`idb -r <dbase> <key> <tag>` # recall value from info database'
      echo  '  idb -c <dbase>                   # create info database'
      echo  '  idb -d <dbase> <key>             # delete IDB record related to key'
      echo  '  idb -l <dbase>                   # list contents of info database'
      echo  '  idb -l <dbase> <key>             # list IDB record related to key'
      echo  '  idb -?                           # show usage'
      echo  '  idb --help                       # comprehensive help'
      echo  '  idb --version                    # print version'
      if [ "$*" == "-?" ]; then
         exit 0
      fi
      ec -y 'example: create information database'
      echo  '  idb -c $ETC/@boards              #create @boards info database'
      ec -y 'example: store board information to info database'
      echo  '  idb -s $ETC/@boards n1 BOARD nrf52dk_nrf52832'
      echo  '  idb -s $ETC/@boards n1 SEGGER 682805980'
      echo  '  idb -s $ETC/@boards n1 BRDID n1'
      echo  '  idb -s $ETC/@boards n1 BRDINFO "Nordic 832dk #1"'
      ec -y 'example: recall board information from info database'
      echo  '  BOARD=`idb -r $ETC/@boards n1 BOARD`'
      echo  '  SEGGER=`idb -r $ETC/@boards n1 SEGGER`'
      echo  '  BRDID=`idb -r $ETC/@boards n1 BRDID`'
      echo  '  BRDINFO=`idb -r $ETC/@boards n1 BRDINFO`'
      exit 0
   fi

#===============================================================================
# idb --version   # print version
#===============================================================================

   if [ "$*" == "--version" ] || [ "$*" == "--v" ]; then
      echo "1.0.2"; exit 0
   fi

#===============================================================================
# idb -c <dbase>   # create info database
#===============================================================================

   if [ "$1" == "-c" ]; then
      shift
      if [ "$1" == "" ] || [ "$2" != "" ]
      then
         ec -r '  error: idb -c '$*
         idb -?;  exit 1
      fi

      if [ -d "$1" ] || [ -f "$1" ]; then
         ec -r '  cannot create info database (since exists): ' $1
         exit 1
      fi

      mkdir $1 && exit 0

      ec -r '  failed to create info database: ' $1
      exit 1
   fi

#===============================================================================
# idb -s <dbase> <key> <tag> <value>   # store information to info database
#===============================================================================

   if [ "$1" == "-s" ]; then
      shift
      if [ "$1" == "" ] || [ "$2" == "" ] || [ "$3" == "" ] || \
         [ "$4" == "" ] || [ "$5" != "" ]; then
         ec -r '  error: idb -s '$*
         idb -?;  exit 1
      fi

      if [ ! -d $1 ]; then
         ec -r "  idb: non existing info database directory: $1"
         exit 1
      fi

         # first remove the tag from the entry

      FILE=$1/$2                       # path of record file
      touch $FILE                      # make sure that record file exists
      cat $FILE | sed "/$3=/d" >$FILE.tmp
      mv $FILE.tmp $FILE

         # finally append new attribute tag assignment

      echo "$3='"$4"'" >>$FILE
      exit 0
   fi

#===============================================================================
# VAL=`idb -r <dbase> <key> <tag>`   # recall information from info database
#===============================================================================

   if [ "$1" == "-r" ]; then
      shift
      if [ "$1" == "" ] || [ "$2" == "" ] || [ "$3" == "" ] ||  [ "$4" != "" ]
      then
         ec -r '  error: idb -r '$*
         idb -?;  exit 1
      fi

      if [ ! -d $1 ]; then
         ec -r "  idb: non existing info database directory: $1"
         exit 1
      fi

      if [ ! -f $1/$2 ]; then
         echo ''  # non existing info database file for <database>/<key>
         exit 0
      else
         source $1/$2
         eval VAL='$'$3
         echo $VAL
      fi
      exit 0
   fi

#===============================================================================
# idb -d <dbase> <key>    # delete IDB record related to key'
#===============================================================================

   if [ "$1" == "-d" ]; then
      shift
      if [ "$1" == "" ] || [ "$2" == "" ] || [ "$3" != "" ]; then
         ec -r '  error: idb -d '$*
         idb -?;  exit 1
      fi

      if [ ! -d $1 ]; then
         ec -r "  idb: non existing info database directory: $1"
         exit 1
      fi

      if [ ! -f $1/$2 ]; then
         echo ''  # non existing info database file for <database>/<key>
         exit 1
      else
         rm $1/$2 # remove database record
      fi
      exit 0
   fi

#===============================================================================
# idb -l <dbase> <key>   # list IDB record related to key
#===============================================================================

   if [ "$1" == "-l" ] && [ "$2" != "" ]; then
      shift
      if [ ! -d $1 ]; then
         ec -r "  idb: non existing info database directory: $1"
         exit 1
      fi

      if [ "$2" != "" ]; then   # list IDB record
         if [ ! -f $1/$2 ]; then
            ec -r "non existing info database file: $1/$2"
            exit 1
         fi
         ec -g "$2":
         cat $1/$2 | awk '{ print "  "$0 }' | sed "s/='/: /" | sed "s/'//"
      else                      # list contents of entire IDB
         KEYS=`ls $1`
         for KEY in $KEYS
         do
            idb -l $1 $KEY
         done
      fi
      exit 0
   fi

#===============================================================================
# cannot deal with anything else ...
#===============================================================================

   idb -?
   ec -r 'bad command: 'idb $*
   exit 1
